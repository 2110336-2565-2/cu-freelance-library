syntax = "proto3";

package order;

option go_package = "pkg/pb;pb";

import "common.proto";
import "file.proto";

service OrderService {
    rpc GetOrderPaginate(GetOrderPaginateRequest) returns (OrderPaginateResponse);
    rpc GetOrderByID(GetOrderByIDRequest) returns (GetOrderByIDResponse);
    rpc CreateOrder(CreateOrderRequest) returns (CreateOrderResponse);
    rpc UpdateOrderByID(UpdateOrderRequest) returns (UpdateOrderResponse);
    rpc DeleteOrderByID(DeleteOrderRequest) returns (DeleteOrderResponse);
    rpc CancelOrder(CancelOrderRequest) returns (CancelOrderResponse);
    rpc AcceptOrder(AcceptOrderRequest) returns (AcceptOrderResponse);

    rpc UpdateSubmission(UpdateSubmissionRequest) returns (UpdateSubmissionResponse);

    rpc ValidateOrder(ValidateOrderRequest) returns (ValidateOrderResponse);
}

message Order{
    string id = 1;
    string freelance_id = 2;
    string customer_id = 3;
    string title = 4;
    string description = 5;
    string status = 6;
    int32 price = 7;
    int32 duration = 8;
    string tel = 9; 
    string email = 10;
    string due_date = 11;
    string freelance_name = 12;
    string customer_name = 13;
}

message OrderFilter{
    repeated uint32 duration = 1;
    repeated uint32 status = 2;
    uint32 min_price = 3;
    uint32 max_price = 4;
    uint32 sort = 5;
}

message GetOrderPaginateRequest{
    string user_id = 1;
    int32 limit = 2;
    int32 page = 3;
    OrderFilter filter = 4;
}

message OrderPaginateResponse{
    repeated Order orders = 1;
    common.PaginationMetadata meta = 2;
}

message GetOrderByIDRequest{
    string id = 1;
    string user_id = 2;
}

message OrderSubmission{
    string id = 1;
    string description = 2;
    int32 totalItems = 3;
    repeated file.Submission submissions = 4;
}

message GetOrderByIDResponse{
    Order order = 1;
    OrderSubmission submission = 2;
}

message CreateOrderRequest{
    string freelance_id = 1;
    string customer_id = 2;
    string title = 3;
    string description = 4;
    int32 price = 5;
    int32 duration = 6;
    string tel = 7;
    string email = 8;
}

message CreateOrderResponse{
    Order order = 1;
    bool is_success = 2;
}

message UpdateOrderRequest{
    string id = 1;
    string title = 2;
    string description = 3;
    int32 status = 4;
    int32 price = 5;
    int32 duration = 6;
    string tel = 7;
    string email = 8;
    string user_id = 9;
}

message UpdateOrderResponse{
    Order order = 1;
    bool is_success = 2;
}

message DeleteOrderRequest{
    string id = 1;
    string user_id = 2;
}

message DeleteOrderResponse{
    bool is_success = 1;
}

message AcceptOrderRequest{
    string id = 1;
    string user_id = 2;
}

message AcceptOrderResponse{
    bool is_success = 1;
}

message CancelOrderRequest{
    string id = 1;
    string user_id = 2;
}

message CancelOrderResponse{
    bool is_success = 1;
}

message UpdateSubmissionRequest{
    string id = 1;
    string orderId = 2;
    string userId = 3;
    string description = 4;
}

message UpdateSubmissionResponse{
    bool is_success = 1;
}

// validate order
// Required
// - order id
// Optional
// - customer id -> 1
// - freelance id -> 2
// - submission id -> 4
// - status -> 8
message ValidateOrderRequest{
    string orderId = 1;
    string customerId = 2;
    string freelanceId = 3;
    string submissionId = 4;
    int32 status = 5;
    int32 option = 6;
}

message ValidateOrderResponse{
    bool isValid = 1;
}